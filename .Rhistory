length(common_gene$index[[1]])
suvi_heart_scRNAseq_comm <- scRNAseq_data[common_gene$index[[2]], ]
suvi_heart_bulk_comm <- suvi_heart_bulk_counts_filter[common_gene$index[[1]], ]
suvi_heart_scRNAseq_comm <- scRNAseq_data[common_gene$index[[2]], ]
SC.eset = ExpressionSet(assayData = suvi_heart_scRNAseq_comm, phenoData =  new("AnnotatedDataFrame", data = pheno.matrix, varMetadata = metadata) )
colnames(suvi_heart_scRNAseq_comm)[1]
rownames(pheno.matrix)[1]
identical(colnames(suvi_heart_scRNAseq_comm), rownames(pheno.matrix))
View(metadata)
df <- data.frame(x=1:6,
y=rep(c("Low", "High"),3),
z=I(LETTERS[1:6]),
row.names=paste("Sample", 1:6, sep="_"))
View(df <- data.frame(x=1:6,
y=rep(c("Low", "High"),3),
z=I(LETTERS[1:6]),
row.names=paste("Sample", 1:6, sep="_")))
df <- data.frame(x=1:6,
y=rep(c("Low", "High"),3),
z=I(LETTERS[1:6]),
row.names=paste("Sample", 1:6, sep="_"))
View(df)
metaData <-
data.frame(labelDescription=c(
"Numbers",
"Factor levels",
"Characters"))
View(metaData)
View(metadata)
View(pheno.matrix)
View(pheno.matrix)
rownames(pheno.matrix) <- suvi_heart_data_csv$V1
View(pheno.matrix)
suvi_heart_data_csv$V1[1]
class(pheno.matrix)
rownames(pheno.matrix)[1]
View(pheno.matrix)
class( suvi_heart_data_csv$V1)
colnames(suvi_heart_scRNAseq_comm)[1]
all(colnames(suvi_heart_scRNAseq_comm) == rownames(pheno.matrix))
SC.eset = ExpressionSet(assayData = suvi_heart_scRNAseq_comm, phenoData =  new("AnnotatedDataFrame", data = pheno.matrix, varMetadata = metadata) )
rownames(pheno.matrix)
colnames(pheno.matrix)
class(suvi_heart_data_csv)
View(suvi_heart_data_csv)
?fread
suvi_heart_data_csv <- fread(paste0(suvi_data_path,"metadata_to_Kai.csv"), data.table = FALSE)
pheno.matrix <- suvi_heart_data_csv[,c(3,4,5)]
rownames(pheno.matrix) <- suvi_heart_data_csv$V1
metadata <- data.frame(labelDescription= c("Sample ID", "phenotype", "Cell Type Name"), row.names=colnames(pheno.matrix))
View(pheno.matrix)
SC.eset = ExpressionSet(assayData = suvi_heart_scRNAseq_comm, phenoData =  new("AnnotatedDataFrame", data = pheno.matrix, varMetadata = metadata) )
bulk.eset <- ExpressionSet(assayData = suvi_heart_bulk_comm)
bulk.eset <- ExpressionSet(assayData = data.matrix(suvi_heart_bulk_comm))
colnames(pheno.matrix)
# Estimate cell type proportions
suvi_bulk_music <-  music_prop(bulk.eset = bulk.eset, sc.eset = SC.eset, clusters = 'cell_types',
samples = 'sample_id', select.ct = c('alpha', 'beta', 'delta', 'gamma',
'acinar', 'ductal'), verbose = F)
#################################################################
##                 use Music for deconvolution                 ##
#################################################################
library(MuSiC)
# Estimate cell type proportions
suvi_bulk_music <-  music_prop(bulk.eset = bulk.eset, sc.eset = SC.eset, clusters = 'cell_types',
samples = 'sample_id', select.ct = c('alpha', 'beta', 'delta', 'gamma',
'acinar', 'ductal'), verbose = F)
library(xbioc)
# Estimate cell type proportions
suvi_bulk_music <-  music_prop(bulk.eset = bulk.eset, sc.eset = SC.eset, clusters = 'cell_types',
samples = 'sample_id', select.ct = c('alpha', 'beta', 'delta', 'gamma',
'acinar', 'ductal'), verbose = F)
dim(bulk.eset)
dim(SC.eset)
# Estimate cell type proportions
suvi_bulk_music <-  music_prop(bulk.eset = bulk.eset, sc.eset = SC.eset, clusters = 'cell_types',
samples = 'sample_id', select.ct = NULL, verbose = F)
names(suvi_bulk_music)
View(suvi_bulk_music$Est.prop.weighted)
View(suvi_bulk_music$Est.prop.allgene)
pdf(file = "~/Downloads/temp_music.pdf", width = 8, height = 8)
ht <- Heatmap(matrix=suvi_bulk_music$Est.prop.weighted,
row_names_gp = gpar(fontsize = 25, fontfae="bold",lwd=30),
column_names_gp = gpar(fontsize = 5,fontfae="bold",lwd=30),
cluster_columns = FALSE,
cluster_rows = FALSE,
column_names_rot = 90,
heatmap_legend_param = list(
at = c(-10, 0, 10),
labels = c("low", "zero", "high"),
title = "Z-score",
legend_height = unit(7, "cm"),
legend_width = unit(3, "cm"),
legend_direction = "vertical",
title_position = "topcenter"),
width = unit(14, "cm"), height = unit(14, "cm"),
name = "Z-score")
draw(ht,heatmap_legend_side = "right")
dev.off()
library(ComplexHeatmap)
pdf(file = "~/Downloads/temp_music.pdf", width = 8, height = 8)
ht <- Heatmap(matrix=suvi_bulk_music$Est.prop.weighted,
row_names_gp = gpar(fontsize = 25, fontfae="bold",lwd=30),
column_names_gp = gpar(fontsize = 5,fontfae="bold",lwd=30),
cluster_columns = FALSE,
cluster_rows = FALSE,
column_names_rot = 90,
heatmap_legend_param = list(
at = c(-10, 0, 10),
labels = c("low", "zero", "high"),
title = "Z-score",
legend_height = unit(7, "cm"),
legend_width = unit(3, "cm"),
legend_direction = "vertical",
title_position = "topcenter"),
width = unit(14, "cm"), height = unit(14, "cm"),
name = "Z-score")
draw(ht,heatmap_legend_side = "right")
dev.off()
pdf(file = "~/Downloads/temp_music.pdf", width = 8, height = 8)
ht <- Heatmap(matrix=t(suvi_bulk_music$Est.prop.weighted),
row_names_gp = gpar(fontsize = 25, fontfae="bold",lwd=30),
column_names_gp = gpar(fontsize = 5,fontfae="bold",lwd=30),
cluster_columns = FALSE,
cluster_rows = FALSE,
column_names_rot = 90,
heatmap_legend_param = list(
at = c(0, 0.5, 1),
labels = c("low", "zero", "high"),
title = "Z-score",
legend_height = unit(7, "cm"),
legend_width = unit(3, "cm"),
legend_direction = "vertical",
title_position = "topcenter"),
width = unit(14, "cm"), height = unit(14, "cm"),
name = "Z-score")
draw(ht,heatmap_legend_side = "right")
dev.off()
pdf(file = "~/Downloads/temp_music.pdf", width = 8, height = 8)
ht <- Heatmap(matrix=t(suvi_bulk_music$Est.prop.weighted),
row_names_gp = gpar(fontsize = 25, fontfae="bold",lwd=30),
column_names_gp = gpar(fontsize = 5,fontfae="bold",lwd=30),
cluster_columns = FALSE,
cluster_rows = FALSE,
column_names_rot = 90,
width = unit(14, "cm"), height = unit(14, "cm"),
name = "cell type proportion")
draw(ht,heatmap_legend_side = "right")
dev.off()
pdf(file = "~/Downloads/temp_music.pdf", width = 8, height = 8)
ht <- Heatmap(matrix=t(suvi_bulk_music$Est.prop.weighted),
row_names_gp = gpar(fontsize = 25, fontfae="bold",lwd=30),
column_names_gp = gpar(fontsize = 5,fontfae="bold",lwd=30),
cluster_columns = FALSE,
cluster_rows = FALSE,
column_names_rot = 90,
rect_gp = gpar(col = "white", lwd = 2),
width = unit(14, "cm"), height = unit(14, "cm"),
name = "cell type proportion")
draw(ht,heatmap_legend_side = "right")
dev.off()
pdf(file = "~/Downloads/temp_music.pdf", width = 8, height = 8)
ht <- ComplexHeatmap::pheatmap(matrix=t(suvi_bulk_music$Est.prop.weighted),
row_names_gp = gpar(fontsize = 25, fontfae="bold",lwd=30),
column_names_gp = gpar(fontsize = 5,fontfae="bold",lwd=30),
cluster_columns = FALSE,
cluster_rows = FALSE,
column_names_rot = 90,
display_numbers = TRUE,
rect_gp = gpar(col = "white", lwd = 2),
width = unit(14, "cm"), height = unit(14, "cm"),
name = "cell type proportion")
draw(ht,heatmap_legend_side = "right")
dev.off()
View(suvi_bulk_music$Est.prop.weighted)
prop_music <- suvi_bulk_music$Est.prop.weighted
View(prop_music)
prop_music_df <- cbind(sample_ID = rownames(prop_music), prop_music)
View(prop_music_df)
colnames(prop_music_df)
prop_music_df <- prop_music_df %>% tidyr::pivot_longer(cols = !sample_ID, names_to= "samples", values_to = "cell_type_prop")
library(dplyr)
prop_music_df <- prop_music_df %>% tidyr::pivot_longer(cols = !sample_ID, names_to= "samples", values_to = "cell_type_prop")
class(prop_music_df)
prop_music_df <- cbind.data.frame(sample_ID = rownames(prop_music), prop_music)
prop_music_df <- prop_music_df %>% tidyr::pivot_longer(cols = !sample_ID, names_to= "samples", values_to = "cell_type_prop")
View(prop_music_df)
View(prop_music_df)
prop_music_df <- cbind.data.frame(sample_ID = rownames(prop_music), prop_music)
prop_music_df <- prop_music_df %>% tidyr::pivot_longer(cols = !sample_ID, names_to= "cell_types", values_to = "cell_type_prop")
View(prop_music_df)
View(prop_music_df)
temp_prop <- ggplot(prop_music_df,aes(x=sample_ID,y=cell_type_prop ,fill=cell_type_prop)) + geom_bar(stat="identity") +
scale_fill_manual(values = col_vector) + theme(legend.key.size = unit(3, 'cm'), legend.text = element_text(size=40))
library(RColorBrewer)
require(ggrepel)
n <- 12
qual_col_pals = brewer.pal.info[brewer.pal.info$category == 'qual',]
col_vector = unlist(mapply(brewer.pal, qual_col_pals$maxcolors, rownames(qual_col_pals)))
temp_prop <- ggplot(prop_music_df,aes(x=sample_ID,y=cell_type_prop ,fill=cell_type_prop)) + geom_bar(stat="identity") +
scale_fill_manual(values = col_vector) + theme(legend.key.size = unit(3, 'cm'), legend.text = element_text(size=40))
temp_prop
temp_prop <- ggplot(prop_music_df,aes(x=sample_ID,y=cell_type_prop ,fill=cell_types)) + geom_bar(stat="identity") +
scale_fill_manual(values = col_vector) + theme(legend.key.size = unit(3, 'cm'), legend.text = element_text(size=40))
temp_prop
ggsave(filename = "temp_prop_music.jpeg",
plot = temp_prop,
path = "~/Downloads/",
width = 30,
height = 20,
dpi = 100)
View(suvi_heart_data_csv)
# marker
markers_all = list(
'CM' = c("TTN", "MYH6", "MYH7", "TNNT2"),
'FB' = c("DCN", "LUM", "FBLN1", "COL1A2", "COL1A2"),
'MESO' = c('WT1', 'UPK3B', 'HAS1', 'MSLN'),
#'EC' = c("PECAM1", "ERG"),
'EEC' = c("NPR3", "NFATC1"),
'VEC' = c("VWF", "ANO2"),
'MP' = c("CD163", "MSR1", "MRC1"),
'PER' = c("RGS5", "ABCC9"),
'L' = c('CD79A', 'CD79B', 'CD3E', 'CD247'),
'SMC' = c("MYH11", "ACTA2"),
'SC' = c('PLP1', 'MPZ', 'PMP22'),
'AD' = c("PLIN4", "PLIN1"),
'N' = c('SYT1', 'SNAP25', 'GRIN1')
)
View(markers_all)
View(pheno.matrix)
# Estimate cell type proportions
suvi_bulk_music <-  music_prop(bulk.eset = bulk.eset, sc.eset = SC.eset, clusters = 'cell_types',markers = markers_all,
samples = 'sample_id', select.ct = NULL, verbose = F)
names(suvi_bulk_music)
prop_music <- suvi_bulk_music$Est.prop.weighted
prop_music_df <- cbind.data.frame(sample_ID = rownames(prop_music), prop_music)
prop_music_df <- prop_music_df %>% tidyr::pivot_longer(cols = !sample_ID, names_to= "cell_types", values_to = "cell_type_prop")
temp_prop <- ggplot(prop_music_df,aes(x=sample_ID,y=cell_type_prop ,fill=cell_types)) + geom_bar(stat="identity") +
scale_fill_manual(values = col_vector) + theme(legend.key.size = unit(3, 'cm'), legend.text = element_text(size=40))
temp_prop
ggsave(filename = "temp_prop_music_marker.jpeg",
plot = temp_prop,
path = "~/Downloads/",
width = 30,
height = 20,
dpi = 100)
suvi_heart_bulk_marker
#[1] "Est.prop.weighted" "Est.prop.allgene"  "Weight.gene"       "r.squared.full"    "Var.prop"
#################################################################
##                     CDSeq deconvolution                     ##
#################################################################
# run CDSeq
# run on markers only
#source('~/Dropbox/Public/MIT/Project_3_GTEx_data_analysis/Code/UtilityFunctions/intersection.R')
common_gene <- CDSeq:::intersection(list.vector = list(unlist(markers_all),rownames(suvi_heart_bulk_counts_filter), rownames(scRNAseq_data)), order = 'stable')
dim(suvi_heart_bulk_counts_filter)
# common gene wth scRNASeq
#comm_gene_bulk_sc <- intersection(list.vector = list(rownames(suvi_heart_bulk_counts_filter), rownames(scRNAseq_data)), order = 'stable')
suvi_heart_bulk_marker <- suvi_heart_bulk_counts_filter[common_gene$index[[2]], ]
suvi_sc_gep_marker <- scRNAseq_data[common_gene$index[[3]],]
cdseq_result <- readRDS("~/Dropbox/Public/MIT/Project_3_GTEx_data_analysis/Results/cell_type_specific_var_validation_suvi_heart/heart_bulk_result.rds")
marker_list <- reshape::melt(markers_all)
colnames(marker_list) <- c("GeneName","CellType")
cdseq_result_marker <- CDSeq:::cellTypeAssignMarkerGenes(cell_gep = cdseq_result$estGEP,#cdseq_result$est_all[[3]]$estGEP,#cdseq_result$estGEP,
marker_gene_list = marker_list,
threshold = 1,
rowlabelsize = 30,
collabelsize = 10,
fig_width = 60,
fig_height = 60,
keysize = 5,
srtcol = 45,
margins = c(50,35),
fig_path = "~/Downloads/")
fuzzy_cell_type <- cdseq_result_marker$cell_type_assignment_fuzzy
temp_df <- cbind(fuzzy_cell_type,cdseq_result$estProp)
temp_df_agg<- temp_df[,-2] %>% group_by(cell.type.in.marker.list) %>%summarise(across(everything(), sum))
temp_df_long <- temp_df_agg %>% tidyr::pivot_longer(cols = -cell.type.in.marker.list, names_to= "samples", values_to = "cell_type_prop")
temp_prop <- ggplot(temp_df_long,aes(x=samples,y=cell_type_prop ,fill=cell.type.in.marker.list)) + geom_bar(stat="identity") +
scale_fill_manual(values = col_vector) + theme(legend.key.size = unit(3, 'cm'), legend.text = element_text(size=40))
temp_prop
dim(suvi_sc_gep_marker)
dim(cdseq_result$estGEP)
dim(suvi_heart_bulk_marker)
dim(suvi_sc_gep_marker)
colnames(suvi_heart_bulk_marker)[1]
colnames(suvi_sc_gep_marker)[1]
sc_annotation$cell_id[1]
class(suvi_sc_gep_marker)
colnames(suvi_sc_gep_marker)[1]
colnames(suvi_sc_gep_marker) <- sc_annotation$cell_type
suvi_sc_gep_merged <- t(rowsum(t(suvi_sc_gep_marker), colnames(suvi_sc_gep_marker)))
dim(suvi_sc_gep_merged)
View(suvi_sc_gep_merged)
suvi_bulk_and_sc <- cbind(suvi_heart_bulk_marker,suvi_sc_gep_merged)
View(suvi_bulk_and_sc)
cdseq_result <- CDSeq(bulk_data = suvi_bulk_and_sc,#suvi_heart_bulk_2,#
beta = .5,#.5,#1.2
alpha = 5,#.2,#.1
cell_type_number = seq(5,100,10),
mcmc_iterations = 2000,
dilution_factor = 10,
cpu_number = 10,
verbose = TRUE)
dim(cdseq_result$estProp)
View(cdseq_result$estProp)
Heatmap(cdseq_result$estProp,
cluster_columns = FALSE,
cluster_rows = FALSE,)
cdseq_result <- CDSeq(bulk_data = suvi_bulk_and_sc,#suvi_heart_bulk_2,#
beta = 1.2,#.5,#1.2
alpha = .1,#.2,#.1
cell_type_number = seq(5,100,10),
mcmc_iterations = 2000,
dilution_factor = 10,
cpu_number = 10,
verbose = TRUE)
Heatmap(cdseq_result$estProp,
cluster_columns = FALSE,
cluster_rows = FALSE,)
cdseq_result <- CDSeq(bulk_data = suvi_bulk_and_sc,#suvi_heart_bulk_2,#
beta = .5,#.5,#1.2
alpha = 2,#.2,#.1
cell_type_number = seq(5,100,10),
mcmc_iterations = 2000,
dilution_factor = 10,
cpu_number = 10,
verbose = TRUE)
Heatmap(cdseq_result$estProp,
cluster_columns = FALSE,
cluster_rows = FALSE,)
dim(suvi_sc_gep_merged)
cdseq_result <- CDSeq(bulk_data = suvi_sc_gep_merged,#suvi_bulk_and_sc,#suvi_heart_bulk_2,#
beta = .5,#.5,#1.2
alpha = 2,#.2,#.1
cell_type_number = seq(5,100,10),
mcmc_iterations = 2000,
dilution_factor = 10,
cpu_number = 10,
verbose = TRUE)
Heatmap(cdseq_result$estProp,
cluster_columns = FALSE,
cluster_rows = FALSE,)
eq(5,15,1)
seq(5,15,1)
length(seq(5,14,1))
cdseq_result <- CDSeq(bulk_data = suvi_sc_gep_merged,#suvi_bulk_and_sc,#suvi_heart_bulk_2,#
beta = .5,#.5,#1.2
alpha = 2,#.2,#.1
cell_type_number = seq(5,14,1),
mcmc_iterations = 2000,
dilution_factor = 10,
cpu_number = 10,
verbose = TRUE)
Heatmap(cdseq_result$estProp,
cluster_columns = FALSE,
cluster_rows = FALSE,)
cdseq_result <- CDSeq(bulk_data = suvi_sc_gep_merged,#suvi_bulk_and_sc,#suvi_heart_bulk_2,#
beta = .5,#.5,#1.2
alpha = 2,#.2,#.1
cell_type_number = seq(5,14,1),
mcmc_iterations = 2000,
dilution_factor = 1,
cpu_number = 10,
verbose = TRUE)
Heatmap(cdseq_result$estProp,
cluster_columns = FALSE,
cluster_rows = FALSE,)
dim(suvi_sc_gep_merged)
suvi_sc_mix <- cbind(suvi_sc_gep_merged, mix1= colSums(suvi_sc_gep_merged[,c(1,2,3)]), mix2=colSums(suvi_sc_gep_merged[,c(3,4,5)]))
View(suvi_sc_mix)
cdseq_result <- CDSeq(bulk_data = suvi_sc_mix,#suvi_sc_gep_merged,#suvi_bulk_and_sc,#suvi_heart_bulk_2,#
beta = .5,#.5,#1.2
alpha = 2,#.2,#.1
cell_type_number = seq(5,14,1),
mcmc_iterations = 2000,
dilution_factor = 1,
cpu_number = 10,
verbose = TRUE)
Heatmap(cdseq_result$estProp,
cluster_columns = FALSE,
cluster_rows = FALSE,)
dim(colSums(suvi_sc_gep_merged[,c(1,2,3)]))
length(colSums(suvi_sc_gep_merged[,c(1,2,3)]))
dim(rowSums(suvi_sc_gep_merged[,c(1,2,3)]))
length(rowSums(suvi_sc_gep_merged[,c(1,2,3)]))
dim(suvi_sc_mix)
View(suvi_sc_mix)
dim(suvi_sc_gep_merged)
colSums(suvi_sc_gep_merged)
rowSums(suvi_sc_gep_merged)
sum(suvi_sc_gep_merged)
cdseq_result <- CDSeq(bulk_data = suvi_sc_gep_merged,#suvi_sc_mix,#,#suvi_bulk_and_sc,#suvi_heart_bulk_2,#
beta = .5,#.5,#1.2
alpha = 2,#.2,#.1
cell_type_number = seq(5,14,1),
mcmc_iterations = 2000,
dilution_factor = 10,
cpu_number = 10,
verbose = TRUE)
Heatmap(cdseq_result$estProp)
Heatmap(cdseq_result$estProp
cluster_columns = TRUE,
cluster_rows = FALSE,)
Heatmap(cdseq_result$estProp,
cluster_columns = TRUE,
cluster_rows = FALSE,)
Heatmap(cdseq_result$estProp,
cluster_columns = FALSE,
cluster_rows = TRUE,)
?Heatmap
heatmap.2(cdseq_result$estProp, Rowv=T, scale='none', dendrogram="row", symm = T, col = brewer.pal(9,"Reds"))
heatmap.2(cdseq_result$estProp, Rowv=T, scale='none', dendrogram="row", symm = T)
heatmap.2(cdseq_result$estProp, Rowv=T, scale='none', dendrogram="row")
cdseq_result <- CDSeq(bulk_data = suvi_sc_gep_merged,#suvi_sc_mix,#,#suvi_bulk_and_sc,#suvi_heart_bulk_2,#
beta = .5,#.5,#1.2
alpha = 2,#.2,#.1
cell_type_number = seq(5,14,1),
mcmc_iterations = 2000,
dilution_factor = 1,
cpu_number = 10,
verbose = TRUE)
Heatmap(cdseq_result$estProp,
cluster_columns = TRUE,
cluster_rows = TRUE,)
Heatmap(cdseq_result$estProp,
cluster_columns = TRUE,
cluster_rows = FALSE,)
heatmap.2(cdseq_result$estProp, Rowv=T, scale='none', dendrogram="row",symm = T)
Heatmap(cdseq_result$estProp),
#cluster_columns = TRUE,
#cluster_rows = FALSE)
heatmap.2(cdseq_result$estProp, Rowv=T, scale='none', dendrogram="row",symm = T)
Heatmap(cdseq_result$estProp)
Heatmap(cdseq_result$estProp,
cluster_columns = TRUE,
cluster_rows = FALSE)
Heatmap(cdseq_result$estProp,
cluster_columns = TRUE,
cluster_rows = TRUE)
Heatmap(cdseq_result$estProp,
cluster_columns = FALSE,
cluster_rows = FALSE)
install.packages(pheatmap)
heatmap.2(cdseq_result$estProp, Rowv=T, scale='none', dendrogram="row",symm = T)
Heatmap(cdseq_result$estProp,
cluster_columns = FALSE,
cluster_rows = FALSE)
Heatmap(cdseq_result$estProp,
row_order = c(9,10,3,7,8,5,4,1,2,6,12,11),
cluster_columns = FALSE,
cluster_rows = FALSE)
saveRDS(cdseq_result,file = "~/Downloads/suvi_sc_gep_merged_CDSeq_result.rds")
colSums(suvi_sc_gep_merged)
suvi_sc_mix <- cbind(suvi_sc_gep_merged, mix1= rowSums(suvi_sc_gep_merged[,c(1,2,3)]), mix2=rowSums(suvi_sc_gep_merged[,c(5,6)]))
cdseq_result <- CDSeq(bulk_data = suvi_sc_mix,#suvi_sc_gep_merged,#suvi_bulk_and_sc,#suvi_heart_bulk_2,#
beta = .5,#.5,#1.2
alpha = 2,#.2,#.1
cell_type_number = seq(5,14,1),
mcmc_iterations = 2000,
dilution_factor = 10,
cpu_number = 10,
verbose = TRUE)
View(cdseq_result$estProp)
dim(cdseq_result$estProp)
Heatmap(cdseq_result$estProp,
#row_order = c(9,10,3,7,8,5,4,1,2,6,12,11),
cluster_columns = FALSE,
cluster_rows = FALSE)
Heatmap(cdseq_result$est_all[[8]]$estProp,
#row_order = c(9,10,3,7,8,5,4,1,2,6,12,11),
cluster_columns = FALSE,
cluster_rows = FALSE)
colnames(suvi_sc_gep_merged)
colSums(suvi_sc_gep_merged)
suvi_sc_mix <- cbind(suvi_sc_gep_merged, mix1= rowSums(suvi_sc_gep_merged[,c(2,3,4)]), mix2=rowSums(suvi_sc_gep_merged[,c(6,7)]))
cdseq_result <- CDSeq(bulk_data = suvi_sc_mix,#suvi_sc_gep_merged,#suvi_bulk_and_sc,#suvi_heart_bulk_2,#
beta = .5,#.5,#1.2
alpha = 5,#.2,#.1
cell_type_number = seq(5,14,1),
mcmc_iterations = 2000,
dilution_factor = 10,
cpu_number = 10,
verbose = TRUE)
dim(cdseq_result$estProp)
Heatmap(cdseq_result$est_all[[8]]$estProp,
#row_order = c(9,10,3,7,8,5,4,1,2,6,12,11),
cluster_columns = FALSE,
cluster_rows = FALSE)
Heatmap(cdseq_result$estProp,
#row_order = c(9,10,3,7,8,5,4,1,2,6,12,11),
cluster_columns = FALSE,
cluster_rows = FALSE)
colnames(suvi_sc_gep_merged)
Heatmap(cdseq_result$est_all[[8]]$estProp,
#row_order = c(9,10,3,7,8,5,4,1,2,6,12,11),
cluster_columns = FALSE,
cluster_rows = FALSE)
cdseq_result <- CDSeq(bulk_data = suvi_sc_mix,#suvi_sc_gep_merged,#suvi_bulk_and_sc,#suvi_heart_bulk_2,#
beta = .5,#.5,#1.2
alpha = 5,#.2,#.1
cell_type_number = seq(5,14,1),
mcmc_iterations = 2000,
dilution_factor = 5,
cpu_number = 10,
verbose = TRUE)
Heatmap(cdseq_result$estProp,
#row_order = c(9,10,3,7,8,5,4,1,2,6,12,11),
cluster_columns = FALSE,
cluster_rows = FALSE)
bannerCommenter::banner("estimate sample-specific cell-type-specific GEP",emph = T)
bannerCommenter::banner("test on Heart data")

dim(refdata)
#################################################################
##                          PBMC data                          ##
#################################################################
data_filter <- gene_filter(seq_data = as.matrix(bulkdata),
gene_number = 200,
method = c('top.var'))
mix <- data_filter$seq_data_filtered[,1:30]
gene_idx <- data_filter$common_idx
cdseq.result <- CDSeq::CDSeq(bulk_data = mix,
cell_type_number = seq(3,12,3),
beta = 0.5,
alpha = 5,
mcmc_iterations = 700,
cpu_number = 4,
dilution_factor = 10)#,reference_gep = refdata[gene_idx,]
#
cor(cdseq.result$estGEP,refdata[gene_idx,])
dim()
dim(data_gep)
View(true_prop_cell)
# test on single bulk sample deconvolution
cdseq.result.ss <- CDSeq::CDSeq(bulk_data = mixtureGEP[,1],
cell_type_number = 6,
beta = 0.5,
alpha = 5,
mcmc_iterations = 1000,
cpu_number = 1,
dilution_factor = 1)
# test on single bulk sample deconvolution
cdseq.result.ss <- CDSeq::CDSeq(bulk_data = mixtureGEP[,1:2],
cell_type_number = 6,
beta = 0.5,
alpha = 5,
mcmc_iterations = 1000,
cpu_number = 1,
dilution_factor = 1)
pairs(cbind(cdseq.result$estGEP,refGEP))
dim(cdseq.result$estGEP)
dim(cdseq.result.ss$estGEP)
dim(refGEP)
pairs(cbind(cdseq.result.ss$estGEP,refGEP))
2:7
# test on single bulk sample deconvolution
cdseq.result.ss <- CDSeq::CDSeq(bulk_data = mixtureGEP[,1:2],
cell_type_number = 2:7,
beta = 0.5,
alpha = 5,
mcmc_iterations = 2000,
cpu_number = 6,
dilution_factor = 1)
dim(cdseq.result.ss$estProp)
pairs(cbind(cdseq.result.ss$estGEP,refGEP))
# test on single bulk sample deconvolution
cdseq.result.ss <- CDSeq::CDSeq(bulk_data = mixtureGEP[,1:3],
cell_type_number = 2:7,
beta = 0.5,
alpha = 5,
mcmc_iterations = 2000,
cpu_number = 6,
dilution_factor = 1)
dim(cdseq.result.ss$estProp)
pairs(cbind(cdseq.result.ss$estGEP,refGEP))
# test on single bulk sample deconvolution
cdseq.result.ss <- CDSeq::CDSeq(bulk_data = mixtureGEP[,1:4],
cell_type_number = 2:7,
beta = 0.5,
alpha = 5,
mcmc_iterations = 2000,
cpu_number = 6,
dilution_factor = 1)
pairs(cbind(cdseq.result.ss$estGEP,refGEP))
pairs(cbind(cdseq.result.ss$est_all[[5]]$estGEP,refGEP))
library(CDSeq)
# load pbmc immune cell types
library(Seurat)
b_cell <- Read10X(data.dir = b_cell_path)
b_cell_path <- "~/Dropbox/Public/MIT/CDSeq_R_package/data/pbmc_10x/b_cell/hg19/"
cd14_mono <- "~/Dropbox/Public/MIT/CDSeq_R_package/data/pbmc_10x/cd14_monocytes/hg19/"
cd4_t_helper <- "~/Dropbox/Public/MIT/CDSeq_R_package/data/pbmc_10x/cd4_t_helper/hg19/"
cd54_nk <- "~/Dropbox/Public/MIT/CDSeq_R_package/data/pbmc_10x/cd56_nk/hg19/"
cytotoxic_t <- "~/Dropbox/Public/MIT/CDSeq_R_package/data/pbmc_10x/cytotoxic_t/hg19/"
memory_t <- "~/Dropbox/Public/MIT/CDSeq_R_package/data/pbmc_10x/memory_t/hg19/"
naive_cyto_t <- "~/Dropbox/Public/MIT/CDSeq_R_package/data/pbmc_10x/naive_cytotoxic_t/hg19/"
naive_t <- "~/Dropbox/Public/MIT/CDSeq_R_package/data/pbmc_10x/naive_t/hg19/"
b_cell_path <- "~/Dropbox/Public/MIT/CDSeq_R_package/data/pbmc_10x/b_cell/hg19/"
cd14_mono_path <- "~/Dropbox/Public/MIT/CDSeq_R_package/data/pbmc_10x/cd14_monocytes/hg19/"
cd4_t_helper_path <- "~/Dropbox/Public/MIT/CDSeq_R_package/data/pbmc_10x/cd4_t_helper/hg19/"
cd54_nk_path <- "~/Dropbox/Public/MIT/CDSeq_R_package/data/pbmc_10x/cd56_nk/hg19/"
cytotoxic_t_path <- "~/Dropbox/Public/MIT/CDSeq_R_package/data/pbmc_10x/cytotoxic_t/hg19/"
memory_t_path <- "~/Dropbox/Public/MIT/CDSeq_R_package/data/pbmc_10x/memory_t/hg19/"
naive_cyto_t_path <- "~/Dropbox/Public/MIT/CDSeq_R_package/data/pbmc_10x/naive_cytotoxic_t/hg19/"
naive_t_path <- "~/Dropbox/Public/MIT/CDSeq_R_package/data/pbmc_10x/naive_t/hg19/"
b_cell <- Read10X(data.dir = b_cell_path)
class(b_cell)
View(b_cell)
dim(b_cell)
rownames(b_cell)[1:4]
colnames(b_cell)[1:3]
b_cell <- Read10X(data.dir = b_cell_path)
cd14_mono <- Read10X(data.dir = cd14_mono_path)
cd4_t_helper <- Read10X(data.dir = cd4_t_helper_path)
cd54_nk <- Read10X(data.dir = cd54_nk_path)
cytotoxic_t <- Read10X(data.dir = cytotoxic_t_path)
memory_t <- Read10X(data.dir = memory_t_path)
naive_cyto_t <- Read10X(data.dir = naive_cyto_t_path)
naive_t <- Read10X(data.dir = naive_t_path)
dim(cd14_mono)
pbmc_immune <- list()
pbmc_immune$b_cell <- Read10X(data.dir = b_cell_path)
pbmc_immune$cd14_mono <- Read10X(data.dir = cd14_mono_path)
pbmc_immune$cd4_t_helper <- Read10X(data.dir = cd4_t_helper_path)
pbmc_immune$cd54_nk <- Read10X(data.dir = cd54_nk_path)
pbmc_immune$cytotoxic_t <- Read10X(data.dir = cytotoxic_t_path)
pbmc_immune$memory_t <- Read10X(data.dir = memory_t_path)
pbmc_immune$naive_cyto_t <- Read10X(data.dir = naive_cyto_t_path)
pbmc_immune$naive_t <- Read10X(data.dir = naive_t_path)
pbmc_imm_all <- do.call(cbind.data.frame, pbmc_immune)
dim(pbmc_imm_all)
View(pbmc_imm_all)
colname(pbmc_imm_all)[1:4]
colnames(pbmc_imm_all)[1:4]
colnames(pbmc_imm_all)[10000:10004]
colnames(pbmc_imm_all)[20000:20004]
?CreateSeuratObject
dim(pbmc_imm_all)
pbmc_imm_seurat <- CreateSeuratObject(counts = pbmc_imm_all, project = "pbmc_immune", min.cells = 100, min.features = 200)
dim(pbmc_imm_seurat)
pbmc_imm_seurat <- CreateSeuratObject(counts = pbmc_imm_all, project = "pbmc_immune", min.cells = 50, min.features = 400)
dim(pbmc_imm_seurat)
sub("\\..*", "", "a.b")
sub("\\..*", "", "aasdf.bdfa")
table(sub("\\..*","",colnames(pbmc_imm_seurat)))
rownames(pbmc_imm_seurat)[1]
rownames(pbmc_imm_seurat)[2]
rownames(pbmc_imm_seurat)[4]
pbmc_imm_seurat[["percent.mt"]] <- PercentageFeatureSet(pbmc_imm_seurat, pattern = "^MT-")
VlnPlot(pbmc_imm_seurat, features = c("nFeature_RNA", "nCount_RNA", "percent.mt"), ncol = 3)
View(pbmc_imm_seurat)
pbmc_immune <- list()
pbmc_immune$b_cell <- Read10X(data.dir = b_cell_path)
pbmc_immune$cd14_mono <- Read10X(data.dir = cd14_mono_path)
pbmc_immune$cd4_t_helper <- Read10X(data.dir = cd4_t_helper_path)
pbmc_immune$cd54_nk <- Read10X(data.dir = cd54_nk_path)
pbmc_immune$cytotoxic_t <- Read10X(data.dir = cytotoxic_t_path)
pbmc_immune$memory_t <- Read10X(data.dir = memory_t_path)
pbmc_immune$cyto_naive_t <- Read10X(data.dir = naive_cyto_t_path)
pbmc_immune$naive_t <- Read10X(data.dir = naive_t_path)
pbmc_imm_all <- do.call(cbind.data.frame, pbmc_immune)
pbmc_imm_seurat <- CreateSeuratObject(counts = pbmc_imm_all, project = "pbmc_immune", min.cells = 50, min.features = 400)
table(sub("\\..*","",colnames(pbmc_imm_seurat)))
pbmc_imm_seurat[["percent.mt"]] <- PercentageFeatureSet(pbmc_imm_seurat, pattern = "^MT-")
VlnPlot(pbmc_imm_seurat, features = c("nFeature_RNA", "nCount_RNA", "percent.mt"), ncol = 3)
plot1 <- FeatureScatter(pbmc_imm_seurat, feature1 = "nCount_RNA", feature2 = "percent.mt")
plot2 <- FeatureScatter(pbmc_imm_seurat, feature1 = "nCount_RNA", feature2 = "nFeature_RNA")
plot1 + plot2
pbmc_imm_seurat <- SCTransform(pbmc_imm_seurat, vars.to.regress = "percent.mt", verbose = FALSE)
pbmc_imm_seurat <- RunPCA(pbmc_imm_seurat, verbose = FALSE)
pbmc_imm_seurat <- RunUMAP(pbmc_imm_seurat, dims = 1:30, verbose = FALSE)
pbmc_imm_seurat <- FindNeighbors(pbmc_imm_seurat, dims = 1:30, verbose = FALSE)
pbmc_imm_seurat <- FindClusters(pbmc_imm_seurat, verbose = FALSE)
DimPlot(pbmc_imm_seurat, label = TRUE) + NoLegend()
?DimPlot
pbmc.data <- Read10X(data.dir = "/Users/kaikang/Dropbox/Public/MIT/CDSeq_R_package/data/pbmc3k/filtered_gene_bc_matrices/hg19/")
# Initialize the Seurat object with the raw (non-normalized data).
pbmc <- CreateSeuratObject(counts = pbmc.data, project = "pbmc3k", min.cells = 3, min.features = 200)
pbmc[["percent.mt"]] <- PercentageFeatureSet(pbmc, pattern = "^MT-")
pbmc <- subset(pbmc, subset = nFeature_RNA > 200 & nFeature_RNA < 2500 & percent.mt < 5)
pbmc <- NormalizeData(pbmc, normalization.method = "LogNormalize", scale.factor = 10000)
pbmc <- FindVariableFeatures(pbmc, selection.method = "vst", nfeatures = 2000)
all.genes <- rownames(pbmc)
pbmc <- ScaleData(pbmc, features = all.genes)
pbmc <- RunPCA(pbmc, features = VariableFeatures(object = pbmc))
pbmc <- FindNeighbors(pbmc, dims = 1:10)
pbmc <- FindClusters(pbmc, resolution = 0.5)
pbmc <- RunUMAP(pbmc, dims = 1:10)
DimPlot(pbmc, reduction = "umap")
FeaturePlot(pbmc, features = c("MS4A1", "GNLY", "CD3E", "CD14", "FCER1A", "FCGR3A", "LYZ", "PPBP",
"CD8A"))
FeaturePlot(pbmc, features = c("IL7R", "CCR7"))
DimPlot(pbmc, reduction = "umap")
pbmc.markers <- FindAllMarkers(pbmc, only.pos = TRUE, min.pct = 0.25, logfc.threshold = 0.25)
pbmc.markers %>% group_by(cluster) %>% top_n(n = 2, wt = avg_logFC)
# pbmc3k
library(dplyr)
library(Seurat)
library(patchwork)
pbmc.markers %>% group_by(cluster) %>% top_n(n = 2, wt = avg_logFC)
new.cluster.ids <- c("Naive CD4 T", "Memory CD4 T", "CD14+ Mono", "B", "CD8 T", "FCGR3A+ Mono",
"NK", "DC", "Platelet")
names(new.cluster.ids) <- levels(pbmc)
pbmc <- RenameIdents(pbmc, new.cluster.ids)
DimPlot(pbmc, reduction = "umap", label = TRUE, pt.size = 0.5) + NoLegend()
View(pbmc)
dim(pbmc)
length(pbmc$orig.ident)[1]
length(pbmc$orig.ident)
pbmc$orig.ident[1]
pbmc$orig.ident[2]
pbmc$seurat_clusters[]
pbmc$seurat_clusters[1]
pbmc$orig.ident[[1]]
length(pbmc$orig.ident)
length(pbmc@active.ident)
pbmc@active.ident[1]
length(pbmc@active.ident)
table(pbmc@active.ident)
saveRDS(pbmc, file = "~/Dropbox/Public/MIT/CDSeq_R_package/data/pbmc3k/pbmc3k_final.rds")
FeaturePlot(pbmc_imm_seurat, features = c("CD4", "CD14"))
FeaturePlot(pbmc_imm_seurat, features = c("CD4", "CD14","CD54"))
pbmc_imm_seurat$orig.ident[1]
?DimPlot
DimPlot(pbmc_imm_seurat, label = TRUE, group.by = "ident") + NoLegend()
DimPlot(pbmc_imm_seurat, label = FALSE, group.by = "ident") #+ NoLegend()
DimPlot(pbmc_imm_seurat, label = FALSE, group.by = "orig.ident") #+ NoLegend()
DimPlot(pbmc_imm_seurat, label = TRUE, group.by = "orig.ident") #+ NoLegend()
FeaturePlot(pbmc_imm_seurat, features = c("CD4", "CD14","CD56"))
pbmc_immune <- list()
pbmc_immune$b_cell <- Read10X(data.dir = b_cell_path)
pbmc_immune$cd14_mono <- Read10X(data.dir = cd14_mono_path)
pbmc_immune$cd4_t_helper <- Read10X(data.dir = cd4_t_helper_path)
pbmc_immune$cd56_nk <- Read10X(data.dir = cd54_nk_path)
pbmc_immune$cytotoxic_t <- Read10X(data.dir = cytotoxic_t_path)
pbmc_immune$memory_t <- Read10X(data.dir = memory_t_path)
pbmc_immune$cyto_naive_t <- Read10X(data.dir = naive_cyto_t_path)
pbmc_immune$naive_t <- Read10X(data.dir = naive_t_path)
pbmc_imm_all <- do.call(cbind.data.frame, pbmc_immune)
pbmc_imm_seurat <- CreateSeuratObject(counts = pbmc_imm_all, project = "pbmc_immune", min.cells = 50, min.features = 400)
table(sub("\\..*","",colnames(pbmc_imm_seurat)))
pbmc_imm_seurat[["percent.mt"]] <- PercentageFeatureSet(pbmc_imm_seurat, pattern = "^MT-")
#VlnPlot(pbmc_imm_seurat, features = c("nFeature_RNA", "nCount_RNA", "percent.mt"), ncol = 3)
# plot1 <- FeatureScatter(pbmc_imm_seurat, feature1 = "nCount_RNA", feature2 = "percent.mt")
# plot2 <- FeatureScatter(pbmc_imm_seurat, feature1 = "nCount_RNA", feature2 = "nFeature_RNA")
# plot1 + plot2
# log norm
pbmc_imm_seurat <- subset(pbmc_imm_seurat, subset = nFeature_RNA > 200 & nFeature_RNA < 2500 & percent.mt < 5)
pbmc_imm_seurat <- NormalizeData(pbmc_imm_seurat, normalization.method = "LogNormalize", scale.factor = 10000)
pbmc_imm_seurat <- FindVariableFeatures(pbmc_imm_seurat, selection.method = "vst", nfeatures = 2000)
all.genes <- rownames(pbmc_imm_seurat)
pbmc_imm_seurat <- ScaleData(pbmc_imm_seurat, features = all.genes)
pbmc_imm_seurat <- RunPCA(pbmc_imm_seurat, features = VariableFeatures(object = pbmc_imm_seurat))
pbmc_imm_seurat <- FindNeighbors(pbmc_imm_seurat, dims = 1:10)
pbmc_imm_seurat <- FindClusters(pbmc_imm_seurat, resolution = 0.5)
pbmc_imm_seurat <- RunUMAP(pbmc_imm_seurat, dims = 1:10)
DimPlot(pbmc_imm_seurat, reduction = "umap",label = TRUE, group.by = "orig.ident")
?RunPCA
?pbmc_imm_seurat
View(pbmc_imm_seurat)
?RunPCA
pbmc_imm_seurat <- SCTransform(pbmc_imm_seurat, vars.to.regress = "percent.mt", verbose = FALSE)
?RunPCA
?RunUMAP
View(pbmc_imm_seurat)
?FindNeighbors
pbmc_imm_seurat <- RunPCA(pbmc_imm_seurat, verbose = FALSE, assay = "SCT")
pbmc_imm_seurat <- RunUMAP(pbmc_imm_seurat, dims = 1:30, verbose = FALSE, assay = "SCT")
pbmc_imm_seurat <- FindNeighbors(pbmc_imm_seurat, dims = 1:30, verbose = FALSE)
pbmc_imm_seurat <- FindClusters(pbmc_imm_seurat, verbose = FALSE)
DimPlot(pbmc_imm_seurat, label = TRUE, group.by = "orig.ident") #+ NoLegend()
pbmc_imm_seurat <- RunPCA(pbmc_imm_seurat, verbose = FALSE, assay = "SCT")
pbmc_imm_seurat <- RunUMAP(pbmc_imm_seurat, dims = 1:30, verbose = FALSE)
pbmc_imm_seurat <- FindNeighbors(pbmc_imm_seurat, dims = 1:30, verbose = FALSE)
pbmc_imm_seurat <- FindClusters(pbmc_imm_seurat, verbose = FALSE)
DimPlot(pbmc_imm_seurat, label = TRUE, group.by = "orig.ident") #+ NoLegend()
View(pbmc_imm_seurat)
pbmc_imm_seurat <- SCTransform(pbmc_imm_seurat, vars.to.regress = c("percent.mt","orig.ident"), verbose = FALSE)
pbmc_imm_seurat <- RunPCA(pbmc_imm_seurat, verbose = FALSE, assay = "SCT")
pbmc_imm_seurat <- RunUMAP(pbmc_imm_seurat, dims = 1:30, verbose = FALSE)
pbmc_imm_seurat <- FindNeighbors(pbmc_imm_seurat, dims = 1:30, verbose = FALSE)
pbmc_imm_seurat <- FindClusters(pbmc_imm_seurat, verbose = FALSE)
DimPlot(pbmc_imm_seurat, label = TRUE, group.by = "orig.ident") #+ NoLegend()
pbmc_imm_seurat <- SCTransform(pbmc_imm_seurat, vars.to.regress = c("percent.mt"), verbose = FALSE)
pbmc_imm_seurat <- RunPCA(pbmc_imm_seurat, verbose = FALSE, assay = "SCT")
pbmc_imm_seurat <- RunUMAP(pbmc_imm_seurat, dims = 1:30, verbose = FALSE)
pbmc_imm_seurat <- FindNeighbors(pbmc_imm_seurat, dims = 1:30, verbose = FALSE)
pbmc_imm_seurat <- FindClusters(pbmc_imm_seurat, verbose = FALSE)
DimPlot(pbmc_imm_seurat, label = TRUE, group.by = "orig.ident") #+ NoLegend()
pbmc_imm_all <- do.call(cbind.data.frame, pbmc_immune)
pbmc_imm_seurat <- CreateSeuratObject(counts = pbmc_imm_all, project = "pbmc_immune", min.cells = 50, min.features = 400)
table(sub("\\..*","",colnames(pbmc_imm_seurat)))
pbmc_imm_seurat[["percent.mt"]] <- PercentageFeatureSet(pbmc_imm_seurat, pattern = "^MT-")
#VlnPlot(pbmc_imm_seurat, features = c("nFeature_RNA", "nCount_RNA", "percent.mt"), ncol = 3)
# plot1 <- FeatureScatter(pbmc_imm_seurat, feature1 = "nCount_RNA", feature2 = "percent.mt")
# plot2 <- FeatureScatter(pbmc_imm_seurat, feature1 = "nCount_RNA", feature2 = "nFeature_RNA")
# plot1 + plot2
# log norm
# pbmc_imm_seurat <- subset(pbmc_imm_seurat, subset = nFeature_RNA > 200 & nFeature_RNA < 2500 & percent.mt < 5)
# pbmc_imm_seurat <- NormalizeData(pbmc_imm_seurat, normalization.method = "LogNormalize", scale.factor = 10000)
# pbmc_imm_seurat <- FindVariableFeatures(pbmc_imm_seurat, selection.method = "vst", nfeatures = 2000)
# all.genes <- rownames(pbmc_imm_seurat)
# pbmc_imm_seurat <- ScaleData(pbmc_imm_seurat, features = all.genes)
# pbmc_imm_seurat <- RunPCA(pbmc_imm_seurat, features = VariableFeatures(object = pbmc_imm_seurat))
# pbmc_imm_seurat <- FindNeighbors(pbmc_imm_seurat, dims = 1:10)
# pbmc_imm_seurat <- FindClusters(pbmc_imm_seurat, resolution = 0.5)
# pbmc_imm_seurat <- RunUMAP(pbmc_imm_seurat, dims = 1:10)
# DimPlot(pbmc_imm_seurat, reduction = "umap",label = TRUE, group.by = "orig.ident")
# SCT
#pbmc_imm_seurat <- subset(pbmc_imm_seurat, subset = nFeature_RNA > 200 & nFeature_RNA < 2500 & percent.mt < 5)
pbmc_imm_seurat <- SCTransform(pbmc_imm_seurat, vars.to.regress = c("percent.mt"), verbose = FALSE)
pbmc_imm_seurat <- RunPCA(pbmc_imm_seurat, verbose = FALSE, assay = "SCT")
pbmc_imm_seurat <- RunUMAP(pbmc_imm_seurat, dims = 1:30, verbose = FALSE)
pbmc_imm_seurat <- FindNeighbors(pbmc_imm_seurat, dims = 1:30, verbose = FALSE)
pbmc_imm_seurat <- FindClusters(pbmc_imm_seurat, verbose = FALSE)
DimPlot(pbmc_imm_seurat, label = TRUE, group.by = "orig.ident") #+ NoLegend()
pbmc_immune <- list()
pbmc_immune$B_cell <- Read10X(data.dir = b_cell_path)
pbmc_immune$CD14_mono <- Read10X(data.dir = cd14_mono_path)
pbmc_immune$CD4_T_helper <- Read10X(data.dir = cd4_t_helper_path)
pbmc_immune$CD56_NK <- Read10X(data.dir = cd54_nk_path)
pbmc_immune$Cytotoxic_T <- Read10X(data.dir = cytotoxic_t_path)
pbmc_immune$Memory_T <- Read10X(data.dir = memory_t_path)
pbmc_immune$CytotoxicNaive_T <- Read10X(data.dir = naive_cyto_t_path)
pbmc_immune$Naive_T <- Read10X(data.dir = naive_t_path)
pbmc_imm_all <- do.call(cbind.data.frame, pbmc_immune)
pbmc_imm_seurat <- CreateSeuratObject(counts = pbmc_imm_all, project = "pbmc_immune", min.cells = 50, min.features = 200)
table(sub("\\..*","",colnames(pbmc_imm_seurat)))
pbmc_imm_seurat[["percent.mt"]] <- PercentageFeatureSet(pbmc_imm_seurat, pattern = "^MT-")
#VlnPlot(pbmc_imm_seurat, features = c("nFeature_RNA", "nCount_RNA", "percent.mt"), ncol = 3)
# plot1 <- FeatureScatter(pbmc_imm_seurat, feature1 = "nCount_RNA", feature2 = "percent.mt")
# plot2 <- FeatureScatter(pbmc_imm_seurat, feature1 = "nCount_RNA", feature2 = "nFeature_RNA")
# plot1 + plot2
# log norm
# pbmc_imm_seurat <- subset(pbmc_imm_seurat, subset = nFeature_RNA > 200 & nFeature_RNA < 2500 & percent.mt < 5)
# pbmc_imm_seurat <- NormalizeData(pbmc_imm_seurat, normalization.method = "LogNormalize", scale.factor = 10000)
# pbmc_imm_seurat <- FindVariableFeatures(pbmc_imm_seurat, selection.method = "vst", nfeatures = 2000)
# all.genes <- rownames(pbmc_imm_seurat)
# pbmc_imm_seurat <- ScaleData(pbmc_imm_seurat, features = all.genes)
# pbmc_imm_seurat <- RunPCA(pbmc_imm_seurat, features = VariableFeatures(object = pbmc_imm_seurat))
# pbmc_imm_seurat <- FindNeighbors(pbmc_imm_seurat, dims = 1:10)
# pbmc_imm_seurat <- FindClusters(pbmc_imm_seurat, resolution = 0.5)
# pbmc_imm_seurat <- RunUMAP(pbmc_imm_seurat, dims = 1:10)
# DimPlot(pbmc_imm_seurat, reduction = "umap",label = TRUE, group.by = "orig.ident")
# SCT
#pbmc_imm_seurat <- subset(pbmc_imm_seurat, subset = nFeature_RNA > 200 & nFeature_RNA < 2500 & percent.mt < 5)
pbmc_imm_seurat <- SCTransform(pbmc_imm_seurat, vars.to.regress = c("percent.mt"), verbose = FALSE)
pbmc_imm_seurat <- RunPCA(pbmc_imm_seurat, verbose = FALSE, assay = "SCT")
pbmc_imm_seurat <- RunUMAP(pbmc_imm_seurat, dims = 1:30, verbose = FALSE)
pbmc_imm_seurat <- FindNeighbors(pbmc_imm_seurat, dims = 1:30, verbose = FALSE)
pbmc_imm_seurat <- FindClusters(pbmc_imm_seurat, verbose = FALSE)
DimPlot(pbmc_imm_seurat, label = TRUE, group.by = "orig.ident") #+ NoLegend()
dim(pbmc_imm_seurat)
pbmc_imm_seurat@meta.data$orig.ident[1]
saveRDS(pbmc_imm_seurat, file = "~/Dropbox/Public/MIT/CDSeq_R_package/data/pbmc_immune/pbmc_imm_seurat.rds")
pbmc_imm_seurat$orig.ident[1]
usethis::use_citation()
devtools::document()
?person
?browseVignettes
message("abs")
message(sprintf("a=",5))
message(sprintf("a=%d",5))
devtools::document()
?par
par()
.pardefault <- par()
.pardefault$mar
devtools::document()
lsf.str("CDSeq")
library(CDSeq)
lsf.str("CDSeq")
lsf.str("package:CDSeq")
devtools::document()
pkgdown::build_site()
?NormalizeData
?FindVariableFeatures
?ScaleData
?RunPCA
?FindNeighbors
?FindClusters
suvi_heart_bulk
###########################################################################
###########################################################################
###                                                                     ###
###                       SUVI HEART BULK SAMPLES                       ###
###                                                                     ###
###########################################################################
###########################################################################
library(CDSeq)
library(gplots)
library(data.table)
suvi_heart_bulk <- fread("/Users/kaikang/Dropbox/Public/MIT/Project_3_GTEx_data_analysis/Data/Suvi_heart_scRNAseq/featurecounts.merged.counts.tsv",data.table = FALSE)
dim(suvi_heart_bulk)
# many gene names are NOT unique
suvi_heart_bulk_gene_names <- suvi_heart_bulk$gene_name
suvi_heart_bulk_gene_id <- suvi_heart_bulk$Geneid
suvi_heart_bulk_counts <- suvi_heart_bulk[,c(-1,-2)]
# fileter zeros
filter_idx <- which(rowSums(suvi_heart_bulk_counts)>600)
suvi_heart_bulk_counts_filter <- suvi_heart_bulk_counts[filter_idx,]
rownames(suvi_heart_bulk_counts_filter) <- suvi_heart_bulk_gene_names[filter_idx]
dim(suvi_heart_bulk_counts_filter)
# marker
markers_all = list(
'CM' = c("TTN", "MYH6", "MYH7", "TNNT2"),
'FB' = c("DCN", "LUM", "FBLN1", "COL1A2", "COL1A2"),
'MESO' = c('WT1', 'UPK3B', 'HAS1', 'MSLN'),
'EC' = c("PECAM1", "ERG"),
'EEC' = c("NPR3", "NFATC1"),
'VEC' = c("VWF", "ANO2"),
'MP' = c("CD163", "MSR1", "MRC1"),
'PER' = c("RGS5", "ABCC9"),
'L' = c('CD79A', 'CD79B', 'CD3E', 'CD247'),
'SMC' = c("MYH11", "ACTA2"),
'SC' = c('PLP1', 'MPZ', 'PMP22'),
'AD' = c("PLIN4", "PLIN1"),
'N' = c('SYT1', 'SNAP25', 'GRIN1')
)
# suvi scRNAseq
load("/Users/kaikang/Dropbox/Public/MIT/Project_3_GTEx_data_analysis/Data/Suvi_heart_scRNAseq/Suvi_heart_scRNASeq.RData")
# run CDSeq
# run on markers only
common_gene <- intersection(list.vector = list(unlist(markers_all),rownames(suvi_heart_bulk_counts_filter), rownames(scRNAseq_data)), order = 'stable')
source('~/Dropbox/Public/MIT/Project_3_GTEx_data_analysis/Code/UtilityFunctions/intersection.R')
common_gene <- intersection(list.vector = list(unlist(markers_all),rownames(suvi_heart_bulk_counts_filter), rownames(scRNAseq_data)), order = 'stable')
# common gene wth scRNASeq
#comm_gene_bulk_sc <- intersection(list.vector = list(rownames(suvi_heart_bulk_counts_filter), rownames(scRNAseq_data)), order = 'stable')
suvi_heart_bulk_marker <- suvi_heart_bulk_counts_filter[common_gene$index[[2]], ]
suvi_sc_gep_marker <- scRNAseq_data[common_gene$index[[3]],]
heatmap.2(x= as.matrix(suvi_heart_bulk_marker),
scale="row",
Rowv=FALSE,
dendrogram="column",
col="bluered",
trace="none")
dim(suvi_heart_bulk_marker)
cdseq_result <- CDSeq(bulk_data = suvi_heart_bulk_marker,#suvi_heart_bulk_2,#
beta = 1.2,#1.2
alpha = .1,#.1
cell_type_number = seq(5,100,10),
mcmc_iterations = 2000,
dilution_factor = 1,
cpu_number = 10)
usethis::use_testthat()
use_test()
usethis::use_test()
usethis::use_test()
usethis::use_test()
?expect_equal
?expect_true
result<-CDSeq(bulk_data =  mixtureGEP, cell_type_number = 6, mcmc_iterations = 5,
dilution_factor = 50, block_number = 1, gene_length = as.vector(gene_length),
reference_gep = refGEP, cpu_number=1, print_progress_msg_to_file=0)
names(result)
result[["estGEp"]]
result[["estGEP"]]
dim(result$estProp)
result2<-CDSeq(bulk_data =  mixtureGEP, cell_type_number = 2:3, mcmc_iterations = 5,
dilution_factor = 50, block_number = 1, gene_length = as.vector(gene_length),
reference_gep = refGEP, cpu_number=1, print_progress_msg_to_file=0)
names(result2)
devtools::test()
rm(list = c("intersection"))
devtools::test()
devtools::test()
usethis::use_test()
cdseq.result.celltypeassign <- cellTypeAssignSCRNA(cdseq_gep = cdseq.result$estGEP, # CDSeq-estimated cell-type-specific GEPs
cdseq_prop = cdseq.result$estProp, # CDSeq-estimated cell type proportions
sc_gep = sc_gep,         # PBMC single cell data
sc_annotation = sc_annotation,# PBMC single data annotations
sc_pt_size = 3,
cdseq_pt_size = 6,
seurat_nfeatures = 100,
seurat_npcs = 50,
seurat_dims=1:5,
plot_umap = 0,
plot_tsne = 0)
dim(sc_gep)
dim(pbmc_mix)
dim(cdseq.result$estGEP)
dim(sc_annotation)
cdseq.result <- CDSeq::CDSeq(bulk_data = pbmc_mix,
cell_type_number = 3,
mcmc_iterations = 5,
cpu_number = 1,
dilution_factor = 50)
cdseq.result.celltypeassign <- cellTypeAssignSCRNA(cdseq_gep = cdseq.result$estGEP, # CDSeq-estimated cell-type-specific GEPs
cdseq_prop = cdseq.result$estProp, # CDSeq-estimated cell type proportions
sc_gep = sc_gep,         # PBMC single cell data
sc_annotation = sc_annotation,# PBMC single data annotations
sc_pt_size = 3,
cdseq_pt_size = 6,
seurat_nfeatures = 100,
seurat_npcs = 50,
seurat_dims=1:5,
plot_umap = 0,
plot_tsne = 0)
names(cdseq.result.celltypeassign)
names(cdseq.result)
?cellTypeAssignSCRNA
cdseq.result.celltypeassign <- cellTypeAssignSCRNA(cdseq_gep = cdseq.result$estGEP, # CDSeq-estimated cell-type-specific GEPs
cdseq_prop = cdseq.result$estProp, # CDSeq-estimated cell type proportions
cdseq_gep_sample_specific = cdseq.result$cellTypeAssignSplit,
sc_gep = sc_gep,         # PBMC single cell data
sc_annotation = sc_annotation,# PBMC single data annotations
sc_pt_size = 3,
cdseq_pt_size = 6,
seurat_nfeatures = 100,
seurat_npcs = 50,
seurat_dims=1:5,
plot_umap = 0,
plot_tsne = 0)
devtools::test()
dim(sc_gep)
dim(pbmc_mix)
colnames(sc_gep)[1]
colnames(sc_gep)[2]
devtools::test()
devtools::test()
devtools::test()
devtools::document()
library(CDSeq)
devtools::submit_cran()

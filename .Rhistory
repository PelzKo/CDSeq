#          filename = fig_name)
}
pca_embedding <- cell_type_annotation$cdseq_synth_scRNA_seurat@reductions$pca@cell.embeddings[,1:2]
pca_plot <- as.data.frame(pca_embedding, stringsAsFactors = FALSE)
pca_plot <- cbind(pca_plot, cell_id = rownames(pca_plot),stringsAsFactors = FALSE)
cdseq_anno <- cell_type_annotation$CDSeq_cell_type_assignment_df[,c(1,3)]
names(cdseq_anno) <- c("cell_id","cell_type")
sc_annotation_2 <- rbind(sc_annotation, cdseq_anno)
pca_plot <- merge(pca_plot, sc_annotation_2, by="cell_id")
pca_plot <- cbind(pca_plot, group = "scRNAseq",stringsAsFactors = FALSE)
pca_plot$group[grep("CDSeq", pca_plot$cell_id)] <- "CDSeq"
pca_plot$group <- factor(pca_plot$group, levels=c("scRNAseq","CDSeq"))
pca_plot$cell_type <- factor(pca_plot$cell_type,levels = c("Ex","Oli","In","Mic","Opc","Ast","End"))
cell_type <- pca_plot$cell_type#factor(pca_plot$cell_type,levels = c("Ex","Oli","In","Mic","Opc","Ast","Endo"))
group <- pca_plot$group
temp_cdseq <- pca_plot[grep("CDSeq",pca_plot$cell_id),]
pca_plot <- pca_plot[-grep("CDSeq",pca_plot$cell_id),]
pca_plot <- rbind(pca_plot,temp_cdseq)
point_stroke <- c(rep(0,73909), rep(2,nrow(temp_cdseq)))
sc_pt_size <- 2
cdseq_pt_size <- 3
cdseq_scRNA_pca<- ggplot(pca_plot,aes(x=PC_1, y=PC_2, colour=as.factor(group), size=as.factor(group), shape=as.factor(group), fill=as.factor(cell_type), stroke=point_stroke)) +
ggtitle(paste0('CDSeq-estimated cell types and scRNAseq')) +
xlab("PC 1") + ylab("PC 2") +
geom_point() + # this is the edge color
scale_colour_manual(name="cell source",values=c("gray","black"),na.value = NA,label=levels(group)) +
scale_fill_manual(name="clusters",values=c(rainbow(7)),na.value = NA,label=levels(cell_type)) +
scale_size_manual(name="cell source", values = c(sc_pt_size,cdseq_pt_size), na.value = NA,label=levels(group)) +
scale_shape_manual(name="cell source", values = c(21,23), na.value = NA,label=levels(group)) +
theme(plot.title = element_text(size = 45, face = "bold"),
axis.title.x = element_text(color="black", size=35,face="bold"),
axis.title.y = element_text(color="black", size=35,face="bold"),
legend.title = element_text(color = "blue", face = "bold", size = 30),
legend.text = element_text(color = "blue", face = "bold", size = 30)) +
guides(color = guide_legend(override.aes = list(size=5)), fill = guide_legend(override.aes = list(shape=21,size=5)))
ggsave(filename = "pca_plot.jpeg",
plot = cdseq_scRNA_pca,
path = "~/Downloads/",
width = 20,
height = 20,
dpi=100)
for (j in c(1)) {
#============ j ============
pseudo_cell_count <- j
fig_name <- paste0(tissue,"_cell_type_assign_ct_",ncol(cdseq_gep),"_cell_",pseudo_cell_count)
cell_type_annotation <- CDSeq::cellTypeAssignSCRNA(cdseq_gep = cdseq_gep,
cdseq_prop = cdseq_prop,
sc_gep = sc_gep,#sc_gep_train,#
sc_batch = sc_batch,
sc_annotation = sc_annotation,#sc_annotation_train,#
seurat_find_marker = FALSE,
pseudo_cell_count = pseudo_cell_count,
batch_correction = 1,
harmony_iter = 25,
harmony_cluster = 25,
seurat_count_threshold = 0,
cdseq_pt_size = 5,
sc_pt_size = 3,
seurat_nfeatures = 2000,
seurat_npcs = 30,
seurat_dims = 1:10,
seurat_resolution = 0.2,
nb_size = 10,#1000*nb_size,#100*nb_size,#5000,#
nb_mu = 1000,#nb_mu,#500,#
fig_path = "~/Downloads/",#"~/Dropbox/Public/MIT/CDSeq_R_package/BMC_Bioinformatics_R1/figures/scRNAseq_cluster_assignment/GTEx_FC/",
plot_umap = 1,
plot_tsne = 0,
fig_name = fig_name,
breaksList = seq(0,0.7,0.007),
fig_format = "jpeg",
fig_dpi = 100,
fig_save = 1,
corr_heatmap_fontsize = 10,
verbose = TRUE)
# # compare with true proportions
# cdseq_prop_merge <- cell_type_annotation$cdseq_prop_merged
# rownames(cdseq_prop_merge)[grep("End",rownames(cdseq_prop_merge))] <- "Endo"
# comm_ct <- CDSeq:::intersection(list.vector = list(rownames(true_prop), rownames(cdseq_prop_merge)), order = "stable")
# rownames(cdseq_prop_merge) <- paste0("CDSeq_",rownames(cdseq_prop_merge))
# cdseq_prop_merge <- cdseq_prop_merge[comm_ct$index[[2]],]
# fig_name <- paste0("~/Dropbox/Public/MIT/CDSeq_R_package/BMC_Bioinformatics_R1/figures/scRNAseq_cluster_assignment/",tissue_path,tissue,"_prop_corr_ct_,ncol(cdseq_gep),"_cell_",pseudo_cell_count,".jpeg")
# pheatmap(cor(t(cdseq_prop_merge), t(true_prop)),
#          fontsize = 20,
#          breaks = breaksList,
#          cluster_rows = FALSE,
#          cluster_cols = FALSE,
#          filename = fig_name)
}
pca_embedding <- cell_type_annotation$cdseq_synth_scRNA_seurat@reductions$pca@cell.embeddings[,1:2]
pca_plot <- as.data.frame(pca_embedding, stringsAsFactors = FALSE)
pca_plot <- cbind(pca_plot, cell_id = rownames(pca_plot),stringsAsFactors = FALSE)
cdseq_anno <- cell_type_annotation$CDSeq_cell_type_assignment_df[,c(1,3)]
names(cdseq_anno) <- c("cell_id","cell_type")
sc_annotation_2 <- rbind(sc_annotation, cdseq_anno)
pca_plot <- merge(pca_plot, sc_annotation_2, by="cell_id")
pca_plot <- cbind(pca_plot, group = "scRNAseq",stringsAsFactors = FALSE)
pca_plot$group[grep("CDSeq", pca_plot$cell_id)] <- "CDSeq"
pca_plot$group <- factor(pca_plot$group, levels=c("scRNAseq","CDSeq"))
pca_plot$cell_type <- factor(pca_plot$cell_type,levels = c("Ex","Oli","In","Mic","Opc","Ast","End"))
cell_type <- pca_plot$cell_type#factor(pca_plot$cell_type,levels = c("Ex","Oli","In","Mic","Opc","Ast","Endo"))
group <- pca_plot$group
temp_cdseq <- pca_plot[grep("CDSeq",pca_plot$cell_id),]
pca_plot <- pca_plot[-grep("CDSeq",pca_plot$cell_id),]
pca_plot <- rbind(pca_plot,temp_cdseq)
point_stroke <- c(rep(0,73909), rep(2,nrow(temp_cdseq)))
sc_pt_size <- 2
cdseq_pt_size <- 3
cdseq_scRNA_pca<- ggplot(pca_plot,aes(x=PC_1, y=PC_2, colour=as.factor(group), size=as.factor(group), shape=as.factor(group), fill=as.factor(cell_type), stroke=point_stroke)) +
ggtitle(paste0('CDSeq-estimated cell types and scRNAseq')) +
xlab("PC 1") + ylab("PC 2") +
geom_point() + # this is the edge color
scale_colour_manual(name="cell source",values=c("gray","black"),na.value = NA,label=levels(group)) +
scale_fill_manual(name="clusters",values=c(rainbow(7)),na.value = NA,label=levels(cell_type)) +
scale_size_manual(name="cell source", values = c(sc_pt_size,cdseq_pt_size), na.value = NA,label=levels(group)) +
scale_shape_manual(name="cell source", values = c(21,23), na.value = NA,label=levels(group)) +
theme(plot.title = element_text(size = 45, face = "bold"),
axis.title.x = element_text(color="black", size=35,face="bold"),
axis.title.y = element_text(color="black", size=35,face="bold"),
legend.title = element_text(color = "blue", face = "bold", size = 30),
legend.text = element_text(color = "blue", face = "bold", size = 30)) +
guides(color = guide_legend(override.aes = list(size=5)), fill = guide_legend(override.aes = list(shape=21,size=5)))
ggsave(filename = "pca_plot.jpeg",
plot = cdseq_scRNA_pca,
path = "~/Downloads/",
width = 20,
height = 20,
dpi=100)
for (j in c(1)) {
#============ j ============
pseudo_cell_count <- j
fig_name <- paste0(tissue,"_cell_type_assign_ct_",ncol(cdseq_gep),"_cell_",pseudo_cell_count)
cell_type_annotation <- CDSeq::cellTypeAssignSCRNA(cdseq_gep = cdseq_gep,
cdseq_prop = cdseq_prop,
sc_gep = sc_gep,#sc_gep_train,#
sc_batch = sc_batch,
sc_annotation = sc_annotation,#sc_annotation_train,#
seurat_find_marker = FALSE,
pseudo_cell_count = pseudo_cell_count,
batch_correction = 1,
harmony_iter = 25,
harmony_cluster = 25,
seurat_count_threshold = 0,
cdseq_pt_size = 5,
sc_pt_size = 3,
seurat_nfeatures = 1000,
seurat_npcs = 30,
seurat_dims = 1:10,
seurat_resolution = 0.2,
nb_size = 100,#1000*nb_size,#100*nb_size,#5000,#
nb_mu = 2000,#nb_mu,#500,#
fig_path = "~/Downloads/",#"~/Dropbox/Public/MIT/CDSeq_R_package/BMC_Bioinformatics_R1/figures/scRNAseq_cluster_assignment/GTEx_FC/",
plot_umap = 1,
plot_tsne = 0,
fig_name = fig_name,
breaksList = seq(0,0.7,0.007),
fig_format = "jpeg",
fig_dpi = 100,
fig_save = 1,
corr_heatmap_fontsize = 10,
verbose = TRUE)
# # compare with true proportions
# cdseq_prop_merge <- cell_type_annotation$cdseq_prop_merged
# rownames(cdseq_prop_merge)[grep("End",rownames(cdseq_prop_merge))] <- "Endo"
# comm_ct <- CDSeq:::intersection(list.vector = list(rownames(true_prop), rownames(cdseq_prop_merge)), order = "stable")
# rownames(cdseq_prop_merge) <- paste0("CDSeq_",rownames(cdseq_prop_merge))
# cdseq_prop_merge <- cdseq_prop_merge[comm_ct$index[[2]],]
# fig_name <- paste0("~/Dropbox/Public/MIT/CDSeq_R_package/BMC_Bioinformatics_R1/figures/scRNAseq_cluster_assignment/",tissue_path,tissue,"_prop_corr_ct_,ncol(cdseq_gep),"_cell_",pseudo_cell_count,".jpeg")
# pheatmap(cor(t(cdseq_prop_merge), t(true_prop)),
#          fontsize = 20,
#          breaks = breaksList,
#          cluster_rows = FALSE,
#          cluster_cols = FALSE,
#          filename = fig_name)
}
pca_embedding <- cell_type_annotation$cdseq_synth_scRNA_seurat@reductions$pca@cell.embeddings[,1:2]
pca_plot <- as.data.frame(pca_embedding, stringsAsFactors = FALSE)
pca_plot <- cbind(pca_plot, cell_id = rownames(pca_plot),stringsAsFactors = FALSE)
cdseq_anno <- cell_type_annotation$CDSeq_cell_type_assignment_df[,c(1,3)]
names(cdseq_anno) <- c("cell_id","cell_type")
sc_annotation_2 <- rbind(sc_annotation, cdseq_anno)
pca_plot <- merge(pca_plot, sc_annotation_2, by="cell_id")
pca_plot <- cbind(pca_plot, group = "scRNAseq",stringsAsFactors = FALSE)
pca_plot$group[grep("CDSeq", pca_plot$cell_id)] <- "CDSeq"
pca_plot$group <- factor(pca_plot$group, levels=c("scRNAseq","CDSeq"))
pca_plot$cell_type <- factor(pca_plot$cell_type,levels = c("Ex","Oli","In","Mic","Opc","Ast","End"))
cell_type <- pca_plot$cell_type#factor(pca_plot$cell_type,levels = c("Ex","Oli","In","Mic","Opc","Ast","Endo"))
group <- pca_plot$group
temp_cdseq <- pca_plot[grep("CDSeq",pca_plot$cell_id),]
pca_plot <- pca_plot[-grep("CDSeq",pca_plot$cell_id),]
pca_plot <- rbind(pca_plot,temp_cdseq)
point_stroke <- c(rep(0,73909), rep(2,nrow(temp_cdseq)))
sc_pt_size <- 2
cdseq_pt_size <- 3
cdseq_scRNA_pca<- ggplot(pca_plot,aes(x=PC_1, y=PC_2, colour=as.factor(group), size=as.factor(group), shape=as.factor(group), fill=as.factor(cell_type), stroke=point_stroke)) +
ggtitle(paste0('CDSeq-estimated cell types and scRNAseq')) +
xlab("PC 1") + ylab("PC 2") +
geom_point() + # this is the edge color
scale_colour_manual(name="cell source",values=c("gray","black"),na.value = NA,label=levels(group)) +
scale_fill_manual(name="clusters",values=c(rainbow(7)),na.value = NA,label=levels(cell_type)) +
scale_size_manual(name="cell source", values = c(sc_pt_size,cdseq_pt_size), na.value = NA,label=levels(group)) +
scale_shape_manual(name="cell source", values = c(21,23), na.value = NA,label=levels(group)) +
theme(plot.title = element_text(size = 45, face = "bold"),
axis.title.x = element_text(color="black", size=35,face="bold"),
axis.title.y = element_text(color="black", size=35,face="bold"),
legend.title = element_text(color = "blue", face = "bold", size = 30),
legend.text = element_text(color = "blue", face = "bold", size = 30)) +
guides(color = guide_legend(override.aes = list(size=5)), fill = guide_legend(override.aes = list(shape=21,size=5)))
ggsave(filename = "pca_plot.jpeg",
plot = cdseq_scRNA_pca,
path = "~/Downloads/",
width = 20,
height = 20,
dpi=100)
for (j in c(1)) {
#============ j ============
pseudo_cell_count <- j
fig_name <- paste0(tissue,"_cell_type_assign_ct_",ncol(cdseq_gep),"_cell_",pseudo_cell_count)
cell_type_annotation <- CDSeq::cellTypeAssignSCRNA(cdseq_gep = cdseq_gep,
cdseq_prop = cdseq_prop,
sc_gep = sc_gep,#sc_gep_train,#
sc_batch = sc_batch,
sc_annotation = sc_annotation,#sc_annotation_train,#
seurat_find_marker = FALSE,
pseudo_cell_count = pseudo_cell_count,
batch_correction = 1,
harmony_iter = 25,
harmony_cluster = 25,
seurat_count_threshold = 0,
cdseq_pt_size = 5,
sc_pt_size = 3,
seurat_nfeatures = 500,
seurat_npcs = 30,
seurat_dims = 1:10,
seurat_resolution = 0.2,
nb_size = 1000,#1000*nb_size,#100*nb_size,#5000,#
nb_mu = 1000,#nb_mu,#500,#
fig_path = "~/Downloads/",#"~/Dropbox/Public/MIT/CDSeq_R_package/BMC_Bioinformatics_R1/figures/scRNAseq_cluster_assignment/GTEx_FC/",
plot_umap = 1,
plot_tsne = 0,
fig_name = fig_name,
breaksList = seq(0,0.7,0.007),
fig_format = "jpeg",
fig_dpi = 100,
fig_save = 1,
corr_heatmap_fontsize = 10,
verbose = TRUE)
# # compare with true proportions
# cdseq_prop_merge <- cell_type_annotation$cdseq_prop_merged
# rownames(cdseq_prop_merge)[grep("End",rownames(cdseq_prop_merge))] <- "Endo"
# comm_ct <- CDSeq:::intersection(list.vector = list(rownames(true_prop), rownames(cdseq_prop_merge)), order = "stable")
# rownames(cdseq_prop_merge) <- paste0("CDSeq_",rownames(cdseq_prop_merge))
# cdseq_prop_merge <- cdseq_prop_merge[comm_ct$index[[2]],]
# fig_name <- paste0("~/Dropbox/Public/MIT/CDSeq_R_package/BMC_Bioinformatics_R1/figures/scRNAseq_cluster_assignment/",tissue_path,tissue,"_prop_corr_ct_,ncol(cdseq_gep),"_cell_",pseudo_cell_count,".jpeg")
# pheatmap(cor(t(cdseq_prop_merge), t(true_prop)),
#          fontsize = 20,
#          breaks = breaksList,
#          cluster_rows = FALSE,
#          cluster_cols = FALSE,
#          filename = fig_name)
}
}
#Seurat::DimPlot(cell_type_annotation$cdseq_synth_scRNA_seurat, reduction = "pca")
pca_embedding <- cell_type_annotation$cdseq_synth_scRNA_seurat@reductions$pca@cell.embeddings[,1:2]
pca_plot <- as.data.frame(pca_embedding, stringsAsFactors = FALSE)
pca_plot <- cbind(pca_plot, cell_id = rownames(pca_plot),stringsAsFactors = FALSE)
cdseq_anno <- cell_type_annotation$CDSeq_cell_type_assignment_df[,c(1,3)]
names(cdseq_anno) <- c("cell_id","cell_type")
sc_annotation_2 <- rbind(sc_annotation, cdseq_anno)
pca_plot <- merge(pca_plot, sc_annotation_2, by="cell_id")
pca_plot <- cbind(pca_plot, group = "scRNAseq",stringsAsFactors = FALSE)
pca_plot$group[grep("CDSeq", pca_plot$cell_id)] <- "CDSeq"
pca_plot$group <- factor(pca_plot$group, levels=c("scRNAseq","CDSeq"))
pca_plot$cell_type <- factor(pca_plot$cell_type,levels = c("Ex","Oli","In","Mic","Opc","Ast","End"))
cell_type <- pca_plot$cell_type#factor(pca_plot$cell_type,levels = c("Ex","Oli","In","Mic","Opc","Ast","Endo"))
group <- pca_plot$group
temp_cdseq <- pca_plot[grep("CDSeq",pca_plot$cell_id),]
pca_plot <- pca_plot[-grep("CDSeq",pca_plot$cell_id),]
pca_plot <- rbind(pca_plot,temp_cdseq)
point_stroke <- c(rep(0,73909), rep(2,nrow(temp_cdseq)))
sc_pt_size <- 2
cdseq_pt_size <- 3
cdseq_scRNA_pca<- ggplot(pca_plot,aes(x=PC_1, y=PC_2, colour=as.factor(group), size=as.factor(group), shape=as.factor(group), fill=as.factor(cell_type), stroke=point_stroke)) +
ggtitle(paste0('CDSeq-estimated cell types and scRNAseq')) +
xlab("PC 1") + ylab("PC 2") +
geom_point() + # this is the edge color
scale_colour_manual(name="cell source",values=c("gray","black"),na.value = NA,label=levels(group)) +
scale_fill_manual(name="clusters",values=c(rainbow(7)),na.value = NA,label=levels(cell_type)) +
scale_size_manual(name="cell source", values = c(sc_pt_size,cdseq_pt_size), na.value = NA,label=levels(group)) +
scale_shape_manual(name="cell source", values = c(21,23), na.value = NA,label=levels(group)) +
theme(plot.title = element_text(size = 45, face = "bold"),
axis.title.x = element_text(color="black", size=35,face="bold"),
axis.title.y = element_text(color="black", size=35,face="bold"),
legend.title = element_text(color = "blue", face = "bold", size = 30),
legend.text = element_text(color = "blue", face = "bold", size = 30)) +
guides(color = guide_legend(override.aes = list(size=5)), fill = guide_legend(override.aes = list(shape=21,size=5)))
ggsave(filename = "pca_plot.jpeg",
plot = cdseq_scRNA_pca,
path = "~/Downloads/",
width = 20,
height = 20,
dpi=100)
dim(sc_tmp)
dim(sc_gep)
i
dim(cdseq_gep)
length(CDSeq_result$est_all[[i]])
length(CDSeq_result$est_all)
CDSeq_result$parameters$cell_type_number
i=6
#============ i ============
cdseq_gep <- CDSeq_result$est_all[[i]]$estGEP
colnames(cdseq_gep) <- paste0("cell_type_",1:ncol(cdseq_gep))
rownames(cdseq_gep) <- rownames(CDSeq_result$estGEP)
cdseq_prop <- CDSeq_result$est_all[[i]]$estProp
rownames(cdseq_prop) <- colnames(cdseq_gep)
colnames(cdseq_prop) <- paste0("mix_",1:ncol(cdseq_prop))
for (j in c(1)) {
#============ j ============
pseudo_cell_count <- j
fig_name <- paste0(tissue,"_cell_type_assign_ct_",ncol(cdseq_gep),"_cell_",pseudo_cell_count)
cell_type_annotation <- CDSeq::cellTypeAssignSCRNA(cdseq_gep = cdseq_gep,
cdseq_prop = cdseq_prop,
sc_gep = sc_gep,#sc_gep_train,#
sc_batch = sc_batch,
sc_annotation = sc_annotation,#sc_annotation_train,#
seurat_find_marker = FALSE,
pseudo_cell_count = pseudo_cell_count,
batch_correction = 1,
harmony_iter = 25,
harmony_cluster = 25,
seurat_count_threshold = 0,
cdseq_pt_size = 5,
sc_pt_size = 3,
seurat_nfeatures = 500,
seurat_npcs = 30,
seurat_dims = 1:10,
seurat_resolution = 0.2,
nb_size = 1000,#1000*nb_size,#100*nb_size,#5000,#
nb_mu = 1000,#nb_mu,#500,#
fig_path = "~/Downloads/",#"~/Dropbox/Public/MIT/CDSeq_R_package/BMC_Bioinformatics_R1/figures/scRNAseq_cluster_assignment/GTEx_FC/",
plot_umap = 1,
plot_tsne = 0,
fig_name = fig_name,
breaksList = seq(0,0.7,0.007),
fig_format = "jpeg",
fig_dpi = 100,
fig_save = 1,
corr_heatmap_fontsize = 10,
verbose = TRUE)
# # compare with true proportions
# cdseq_prop_merge <- cell_type_annotation$cdseq_prop_merged
# rownames(cdseq_prop_merge)[grep("End",rownames(cdseq_prop_merge))] <- "Endo"
# comm_ct <- CDSeq:::intersection(list.vector = list(rownames(true_prop), rownames(cdseq_prop_merge)), order = "stable")
# rownames(cdseq_prop_merge) <- paste0("CDSeq_",rownames(cdseq_prop_merge))
# cdseq_prop_merge <- cdseq_prop_merge[comm_ct$index[[2]],]
# fig_name <- paste0("~/Dropbox/Public/MIT/CDSeq_R_package/BMC_Bioinformatics_R1/figures/scRNAseq_cluster_assignment/",tissue_path,tissue,"_prop_corr_ct_,ncol(cdseq_gep),"_cell_",pseudo_cell_count,".jpeg")
# pheatmap(cor(t(cdseq_prop_merge), t(true_prop)),
#          fontsize = 20,
#          breaks = breaksList,
#          cluster_rows = FALSE,
#          cluster_cols = FALSE,
#          filename = fig_name)
}
pca_embedding <- cell_type_annotation$cdseq_synth_scRNA_seurat@reductions$pca@cell.embeddings[,1:2]
pca_plot <- as.data.frame(pca_embedding, stringsAsFactors = FALSE)
pca_plot <- cbind(pca_plot, cell_id = rownames(pca_plot),stringsAsFactors = FALSE)
cdseq_anno <- cell_type_annotation$CDSeq_cell_type_assignment_df[,c(1,3)]
names(cdseq_anno) <- c("cell_id","cell_type")
sc_annotation_2 <- rbind(sc_annotation, cdseq_anno)
pca_plot <- merge(pca_plot, sc_annotation_2, by="cell_id")
pca_plot <- cbind(pca_plot, group = "scRNAseq",stringsAsFactors = FALSE)
pca_plot$group[grep("CDSeq", pca_plot$cell_id)] <- "CDSeq"
pca_plot$group <- factor(pca_plot$group, levels=c("scRNAseq","CDSeq"))
pca_plot$cell_type <- factor(pca_plot$cell_type,levels = c("Ex","Oli","In","Mic","Opc","Ast","End"))
cell_type <- pca_plot$cell_type#factor(pca_plot$cell_type,levels = c("Ex","Oli","In","Mic","Opc","Ast","Endo"))
group <- pca_plot$group
temp_cdseq <- pca_plot[grep("CDSeq",pca_plot$cell_id),]
pca_plot <- pca_plot[-grep("CDSeq",pca_plot$cell_id),]
pca_plot <- rbind(pca_plot,temp_cdseq)
point_stroke <- c(rep(0,73909), rep(2,nrow(temp_cdseq)))
sc_pt_size <- 2
cdseq_pt_size <- 3
cdseq_scRNA_pca<- ggplot(pca_plot,aes(x=PC_1, y=PC_2, colour=as.factor(group), size=as.factor(group), shape=as.factor(group), fill=as.factor(cell_type), stroke=point_stroke)) +
ggtitle(paste0('CDSeq-estimated cell types and scRNAseq')) +
xlab("PC 1") + ylab("PC 2") +
geom_point() + # this is the edge color
scale_colour_manual(name="cell source",values=c("gray","black"),na.value = NA,label=levels(group)) +
scale_fill_manual(name="clusters",values=c(rainbow(7)),na.value = NA,label=levels(cell_type)) +
scale_size_manual(name="cell source", values = c(sc_pt_size,cdseq_pt_size), na.value = NA,label=levels(group)) +
scale_shape_manual(name="cell source", values = c(21,23), na.value = NA,label=levels(group)) +
theme(plot.title = element_text(size = 45, face = "bold"),
axis.title.x = element_text(color="black", size=35,face="bold"),
axis.title.y = element_text(color="black", size=35,face="bold"),
legend.title = element_text(color = "blue", face = "bold", size = 30),
legend.text = element_text(color = "blue", face = "bold", size = 30)) +
guides(color = guide_legend(override.aes = list(size=5)), fill = guide_legend(override.aes = list(shape=21,size=5)))
ggsave(filename = "pca_plot.jpeg",
plot = cdseq_scRNA_pca,
path = "~/Downloads/",
width = 20,
height = 20,
dpi=100)
# test Jackie's data
data_dir = "/Users/kaikang/Dropbox/Public/MIT/data_from_Jackie/temp_for_Kai/"
scWAT.result.estGEP = readRDS(paste0(data_dir,"scWAT.result.estGEP.rds"))
scWAT.result.estProp = readRDS(paste0(data_dir,"scWAT.result.estProp.rds"))
install.packages("qs")
mature.svf.sc.gep = qs::qread(paste0(data_dir,"mature.svf.sc.gep.qs"))
pryr::object_size(mature.svf.sc.gep)
dim(mature.svf.sc.gep)
rownames(mature.svf.sc.gep)[1]
col(mature.svf.sc.gep)[1]
}
sdfa
mature.svf.anno = readRDS(paste0(data_dir,"mature.svf.anno.rds"))
scWAT.celltypeassign = CDSeq::cellTypeAssignSCRNA(cdseq_gep = scWAT.result.estGEP,
cdseq_prop = scWAT.result.estProp,
sc_gep = mature.svf.sc.gep.subset,
sc_annotation = mature.svf.anno,
ssc_pt_size = 3,
cdseq_pt_size = 6,
seurat_nfeatures = 100,
seurat_npcs = 50,
seurat_dims = 1:5,
plot_umap = 1,
plot_tsne = 0,
fig_path = data_dir)
scWAT.celltypeassign = CDSeq::cellTypeAssignSCRNA(cdseq_gep = scWAT.result.estGEP,
cdseq_prop = scWAT.result.estProp,
sc_gep = mature.svf.sc.gep.subset,
sc_annotation = mature.svf.anno,
sc_pt_size = 3,
cdseq_pt_size = 6,
seurat_nfeatures = 100,
seurat_npcs = 50,
seurat_dims = 1:5,
plot_umap = 1,
plot_tsne = 0,
fig_path = data_dir)
mature.svf.sc.gep.subset = mature.svf.sc.gep[,sample(1:ncol(mature.svf.sc.gep),5000,replace = FALSE)]
scWAT.celltypeassign = CDSeq::cellTypeAssignSCRNA(cdseq_gep = scWAT.result.estGEP,
cdseq_prop = scWAT.result.estProp,
sc_gep = mature.svf.sc.gep.subset,
sc_annotation = mature.svf.anno,
sc_pt_size = 3,
cdseq_pt_size = 6,
seurat_nfeatures = 100,
seurat_npcs = 50,
seurat_dims = 1:5,
plot_umap = 1,
plot_tsne = 0,
fig_path = data_dir)
dim(mature.svf.anno)
cell.subset = sample(1:ncol(mature.svf.sc.gep),5000,replace = FALSE)
mature.svf.sc.gep.subset = mature.svf.sc.gep[,cell.subset]
mature.svf.anno.subset = mature.svf.anno[cell.subset,]
pryr::object_size(mature.svf.sc.gep)
scWAT.celltypeassign = CDSeq::cellTypeAssignSCRNA(cdseq_gep = scWAT.result.estGEP,
cdseq_prop = scWAT.result.estProp,
sc_gep = mature.svf.sc.gep.subset,
sc_annotation = mature.svf.anno,
sc_pt_size = 3,
cdseq_pt_size = 6,
seurat_nfeatures = 100,
seurat_npcs = 50,
seurat_dims = 1:5,
plot_umap = 1,
plot_tsne = 0,
fig_path = data_dir)
scWAT.celltypeassign = CDSeq::cellTypeAssignSCRNA(cdseq_gep = scWAT.result.estGEP,
cdseq_prop = scWAT.result.estProp,
sc_gep = mature.svf.sc.gep.subset,
sc_annotation = mature.svf.anno.subset,
sc_pt_size = 3,
cdseq_pt_size = 6,
seurat_nfeatures = 100,
seurat_npcs = 50,
seurat_dims = 1:5,
plot_umap = 1,
plot_tsne = 0,
fig_path = data_dir)
scWAT.celltypeassign = CDSeq::cellTypeAssignSCRNA(cdseq_gep = scWAT.result.estGEP,
cdseq_prop = scWAT.result.estProp,
sc_gep = mature.svf.sc.gep.subset,
sc_annotation = mature.svf.anno.subset,
sc_pt_size = 3,
batch_correction = 0,
cdseq_pt_size = 6,
seurat_nfeatures = 100,
seurat_npcs = 50,
seurat_dims = 1:5,
plot_umap = 1,
plot_tsne = 0,
fig_path = data_dir)
scWAT.celltypeassign = CDSeq::cellTypeAssignSCRNA(cdseq_gep = scWAT.result.estGEP,
cdseq_prop = scWAT.result.estProp,
sc_gep = mature.svf.sc.gep.subset,
sc_annotation = mature.svf.anno.subset,
sc_pt_size = 3,
batch_correction = 0,
cdseq_pt_size = 6,
seurat_nfeatures = 100,
seurat_npcs = 50,
seurat_dims = 1:5,
plot_umap = 1,
plot_tsne = 0,
fig_save = 1,
fig_path = data_dir)
View(mature.svf.sc.gep.subset)
mature.svf.sc.gep.subset[1,1]
View(mature.svf.sc.gep.subset[1:10,1:10])
dim(scWAT.result.estGEP)
